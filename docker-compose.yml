version: '3.8'

services:
  frontend:
    build:
      context: ./ticketMaster
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
    volumes:
      - ./ticketMaster:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    command: npm start -- --host 0.0.0.0 --poll 500
    working_dir: /app
    depends_on:
      - backend

  backend:
    build:
      context: ./backTicketMaster
      dockerfile: Dockerfile
    ports:
      - "3333:3333"
    volumes:
      - ./backTicketMaster:/app
      - /app/node_modules
    environment:
      - PORT=3333
      - HOST=0.0.0.0
      - NODE_ENV=development
      - APP_KEY=votre_clé_secrète_ici
      - DRIVE_DISK=local
      - DB_CONNECTION=mysql
      - MYSQL_HOST=db
      - MYSQL_PORT=3306
      - MYSQL_USER=ticket_user
      - MYSQL_PASSWORD=ticket_password
      - MYSQL_DB_NAME=ticket_db
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: mariadb:latest
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root_password
      - MYSQL_DATABASE=ticket_db
      - MYSQL_USER=ticket_user
      - MYSQL_PASSWORD=ticket_password
    volumes:
      - mariadb_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mariadb", "-u", "ticket_user", "-pticket_password", "-e", "SELECT 1"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - app-network

volumes:
  mariadb_data:

networks:
  app-network:
    driver: bridge 